{"remainingRequest":"C:\\Users\\31624\\Documents\\GitHub\\frontend-bankapi-vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\31624\\Documents\\GitHub\\frontend-bankapi-vue\\src\\components\\transactions\\MakeTrans.vue?vue&type=style&index=0&id=a74f39e0&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\31624\\Documents\\GitHub\\frontend-bankapi-vue\\src\\components\\transactions\\MakeTrans.vue","mtime":1719996726847},{"path":"C:\\Users\\31624\\Documents\\GitHub\\frontend-bankapi-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1719996934417},{"path":"C:\\Users\\31624\\Documents\\GitHub\\frontend-bankapi-vue\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1719996935745},{"path":"C:\\Users\\31624\\Documents\\GitHub\\frontend-bankapi-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1719996934914},{"path":"C:\\Users\\31624\\Documents\\GitHub\\frontend-bankapi-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719996933867},{"path":"C:\\Users\\31624\\Documents\\GitHub\\frontend-bankapi-vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1719996935174}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouc2VsZWN0ZWQtdHIgew0KICBiYWNrZ3JvdW5kOiAjMGQ2ZWZkOw0KICBjb2xvcjogd2hpdGU7DQp9DQoNCi5zZWxlY3RlZC10ciAuYnRuIHsNCiAgYmFja2dyb3VuZDogd2hpdGU7DQogIGJvcmRlci1jb2xvcjogd2hpdGU7DQogIGNvbG9yOiAjMGQ2ZWZkOw0KfQ0KDQouc2VsZWN0ZWQtdHIgcCB7DQogIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50Ow0KICBmb250LXdlaWdodDogNjAwOw0KfQ0K"},{"version":3,"sources":["C:\\Users\\31624\\Documents\\GitHub\\frontend-bankapi-vue\\src\\components\\transactions\\MakeTrans.vue"],"names":[],"mappings":";AAkXA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClB","file":"C:/Users/31624/Documents/GitHub/frontend-bankapi-vue/src/components/transactions/MakeTrans.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <Vue-tabs>\r\n    <V-tab title=\"First tab\"> First tab content </V-tab>\r\n  </Vue-tabs>\r\n\r\n  <div v-if=\"isLoggedIn\" class=\"container\">\r\n    <h1 class=\"text-center my-2 text-muted\">Please select an account in the dropdown</h1>\r\n    <div class=\"form-container\">\r\n      <div>\r\n        <h1\r\n          v-if=\"selectedAccount && selectedAccount.balance !== null\"\r\n          class=\"text-center text-muted\"\r\n        >\r\n          Current account balance: €{{ selectedAccount.balance }}\r\n        </h1>\r\n        <h1\r\n          v-if=\"selectedAccount && selectedAccount.balance === null\"\r\n          class=\"text-center text-muted\"\r\n        >\r\n          Account balance is not available.\r\n        </h1>\r\n      </div>\r\n\r\n      <div class=\"input-group mx-0 text-center mb-3\">\r\n        <select\r\n          @change=\"onChange($event)\"\r\n          class=\"w-100 text-center mx-0\"\r\n          :disabled=\"disable\"\r\n          v-model=\"selected\"\r\n        >\r\n          <option :value=\"null\" disabled>Select Account</option>\r\n          <option v-for=\"account in accounts\" :key=\"account.iban\" :value=\"account.iban\">\r\n            Iban: {{ account.iban }} Owner: {{ account.username }} AccountType:\r\n            {{ account.accountType }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div\r\n        v-if=\"selectedAccount && selectedAccount.balance !== null\"\r\n        class=\"input-group mb-3\"\r\n      >\r\n        <span class=\"input-group-text\">Search for user</span>\r\n        <input\r\n          :disabled=\"disable\"\r\n          type=\"text\"\r\n          @input=\"searchUser()\"\r\n          v-model=\"username\"\r\n          class=\"form-control\"\r\n        />\r\n        <button type=\"button\" :disabled=\"disable\" class=\"btn btn-success\">\r\n          Search User\r\n        </button>\r\n      </div>\r\n\r\n      <div v-if=\"accountsFetched.length != 0\" class=\"\">\r\n        <table class=\"table align-middle mb-0 bg-white shadow-sm\">\r\n          <thead class=\"bg-light\">\r\n            <tr>\r\n              <th>IBan</th>\r\n              <th>Balance</th>\r\n              <th>AbsLimit</th>\r\n              <th>Owner</th>\r\n              <th>Owner Name</th>\r\n              <th v-if=\"!selectedToAccount\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"account in accountsFetched\" :key=\"account.id\" :account=\"account\">\r\n              <td>\r\n                <div class=\"d-flex align-items-center\">\r\n                  <div class=\"ms-3\">\r\n                    <p class=\"text-muted mb-0\">{{ account.iban }}</p>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>€{{ account.balance }}</td>\r\n              <td>€{{ account.absLimit }}</td>\r\n              <td>\r\n                <span class=\"badge text-primary badge-success rounded-pill d-inline\">\r\n                  {{ account.username }}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                {{ account.firstname + \" \" + account.lastname }}\r\n              </td>\r\n              <td v-if=\"!selectedToAccount\">\r\n                <a @click=\"selectIban(account, $event)\" class=\"btn btn-secondary\"\r\n                  >Select Account</a\r\n                >\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div\r\n        v-if=\"selectedAccount && selectedAccount.balance !== null\"\r\n        class=\"input-group my-3\"\r\n      >\r\n        <span class=\"input-group-text w-100 text-center\">Iban to make a deposit to</span>\r\n        <select\r\n          @change=\"onChange2($event)\"\r\n          class=\"w-100 text-center mx-0\"\r\n          :disabled=\"!disable\"\r\n          v-model=\"selectedToAccount\"\r\n        >\r\n          <option :value=\"null\" disabled>Select Account</option>\r\n          <option\r\n            v-for=\"account in accountsFetched\"\r\n            :key=\"account.iban\"\r\n            :value=\"account.iban\"\r\n          >\r\n            Iban: {{ account.iban }} Owner: {{ account.username }} AccountType:\r\n            {{ account.accountType }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <form v-on:submit.prevent=\"login\" ref=\"depoform\">\r\n        <div\r\n          v-if=\"selectedAccount && selectedAccount.balance !== null\"\r\n          class=\"form-hider\"\r\n        >\r\n          <div class=\"input-group mb-3\">\r\n            <span class=\"input-group-text\">Amount to transfer: €</span>\r\n            <input\r\n              @keypress=\"isNumber($event)\"\r\n              type=\"text\"\r\n              required=\"required\"\r\n              :disabled=\"!disable\"\r\n              v-model=\"balInput\"\r\n              class=\"text-center form-control\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"input-group mb-3\">\r\n            <button type=\"button\" class=\"w-100 btn btn-primary\" @click=\"makeTrans()\">\r\n              Transfer\r\n            </button>\r\n          </div>\r\n          <p v-if=\"errorMsg\" class=\"text-danger\">{{ errorMsg }}</p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"../../axios-auth\";\r\nimport { VueTabs, VTab } from \"vue-nav-tabs\";\r\n//you can also import this in your style tag\r\nimport \"vue-nav-tabs/themes/vue-tabs.css\";\r\n\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"MakeTrans\",\r\n  computed: {\r\n    ...mapGetters([\"isAdmin\"]),\r\n    ...mapGetters([\"isLoggedIn\"]),\r\n    ...mapGetters([\"getuserID\"]),\r\n  },\r\n  components: {\r\n    VueTabs,\r\n    VTab,\r\n  },\r\n  data() {\r\n    return {\r\n      selected: null,\r\n      selectedToAccount: null,\r\n      disable: false,\r\n      accounts: [],\r\n      accountsFetched: [],\r\n      accountsNotFetchedMsg: \"\",\r\n      userID: \"\",\r\n      balInput: \"\",\r\n      errorMsg: \"\",\r\n      username: \"\",\r\n      selectedAccount: null,\r\n      token: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.token = localStorage.getItem(\"token\");\r\n    this.userID = localStorage.getItem(\"userID\");\r\n    axios\r\n      .request({\r\n        url: \"accounts/userid/\" + this.userID,\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${this.token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.accounts = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.errored = true;\r\n      })\r\n      .finally(() => (this.loading = false));\r\n  },\r\n  methods: {\r\n    searchUser() {\r\n      if (this.username.length >= 3) {\r\n        console.log(this.username);\r\n        axios\r\n          .get(\"accounts/name/\" + this.username)\r\n          .then((res) => {\r\n            this.accountsFetched = res.data;\r\n\r\n            this.placeHolder = res.data.firstname + \" \" + res.data.lastname;\r\n            this.ownerId = res.data.id;\r\n            this.fetchedUser = JSON.stringify(res.data);\r\n            this.errMsg = \"\";\r\n            // this.findIbanByUsername(res.data.username);\r\n            //this.disable = true;\r\n          })\r\n          .catch((error) => {\r\n            this.errMsg = \"User not found\";\r\n            this.accountsFetched = [];\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    // findIbanByUsername(username) {\r\n    //   if (!username) {\r\n    //     console.error(\"Username is undefined or null\");\r\n    //     return;\r\n    //   }\r\n    //   axios\r\n    //     .request({\r\n    //       url: `accounts/username/${username}`,\r\n    //       method: \"get\",\r\n    //       headers: {\r\n    //         Accept: \"application/json\",\r\n    //         \"Content-Type\": \"application/json; charset=UTF-8\",\r\n    //         Authorization: `Bearer ${this.token}`,\r\n    //       },\r\n    //     })\r\n    //     .then((response) => {\r\n    //       console.log(response.data);\r\n    //       this.accountsFetched = response.data;\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.error(\"Error fetching IBAN by username:\", error);\r\n    //       this.errorMsg = \"Failed to fetch accounts by username.\";\r\n    //     });\r\n    // },\r\n    selectIban(account, event) {\r\n      const parentTr = event.target.closest(\"tr\");\r\n      if (parentTr) {\r\n        parentTr.classList.add(\"selected-tr\");\r\n      }\r\n\r\n      this.selectedToAccount = account.iban;\r\n\r\n      this.disable = true;\r\n    },\r\n    makeTrans() {\r\n      const balFloat = parseFloat(this.balInput);\r\n      if (!isNaN(balFloat)) {\r\n        this.makeTransAxios();\r\n      } else {\r\n        this.errorMsg =\r\n          \"Cannot create transaction; Please enter a valid amount greater than 0.\";\r\n      }\r\n    },\r\n    makeTransAxios() {\r\n      const today = new Date();\r\n      const date =\r\n        today.getFullYear() +\r\n        \"-\" +\r\n        (\"0\" + (today.getMonth() + 1)).slice(-2) +\r\n        \"-\" +\r\n        (\"0\" + today.getDate()).slice(-2) +\r\n        \"T\" +\r\n        (\"0\" + today.getHours()).slice(-2) +\r\n        \":\" +\r\n        (\"0\" + today.getMinutes()).slice(-2) +\r\n        \":\" +\r\n        (\"0\" + today.getSeconds()).slice(-2);\r\n\r\n      const data = JSON.stringify({\r\n        transactionType: \"regular\",\r\n        timestamp: date,\r\n        amount: this.balInput,\r\n        userPerforming: this.userID,\r\n        from: this.selected,\r\n        to: this.selectedToAccount,\r\n        pincode: null,\r\n      });\r\n\r\n      let config = {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${this.token}`,\r\n        },\r\n      };\r\n\r\n      axios\r\n        .post(\"transactions\", data, config)\r\n        .then((response) => {\r\n          console.log(response);\r\n          this.$router.replace(\"/transactions\");\r\n        })\r\n        .catch((error) => {\r\n          this.errorMsg = error.response.data.reason;\r\n          console.log(error);\r\n        });\r\n    },\r\n    onChange(event) {\r\n      axios\r\n        .request({\r\n          url: \"accounts/iban/\" + event.target.value,\r\n          method: \"get\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json; charset=UTF-8\",\r\n            Authorization: `Bearer ${this.token}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          this.balInput = null;\r\n          this.errorMsg = \"\";\r\n          this.selectedAccount = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n        .finally(() => (this.loading = false));\r\n    },\r\n    onChange2(event) {\r\n      axios\r\n        .request({\r\n          url: \"accounts/iban/\" + event.target.value,\r\n          method: \"get\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json; charset=UTF-8\",\r\n            Authorization: `Bearer ${this.token}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          this.errorMsg = \"\";\r\n          this.selectedToAccount = response.data.iban;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n        .finally(() => (this.loading = false));\r\n    },\r\n    isNumber: function (evt) {\r\n      evt = evt ? evt : window.event;\r\n      var charCode = evt.which ? evt.which : evt.keyCode;\r\n      if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode !== 46) {\r\n        evt.preventDefault();\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.selected-tr {\r\n  background: #0d6efd;\r\n  color: white;\r\n}\r\n\r\n.selected-tr .btn {\r\n  background: white;\r\n  border-color: white;\r\n  color: #0d6efd;\r\n}\r\n\r\n.selected-tr p {\r\n  color: white !important;\r\n  font-weight: 600;\r\n}\r\n</style>\r\n"]}]}